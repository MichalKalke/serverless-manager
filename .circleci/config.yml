version: 2.1
executors:
  go-env:
    docker:
      - image: cimg/go:1.22
  docker-dind:
    machine:
      image: ubuntu-2204:2024.04.4
    resource_class: medium
workflows:
  version: 2
  build:
    jobs:
      #- lint
      - unit-tests
      - pre-integration
      #- post-integration
jobs:
#  lint: DONE
#    executor: go-env
#    steps:
#      - checkout
#      - run:
#          name: Install golangci-lint
#          command: |
#            curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest
#      - run:
#          name: Run lint
#          command: golangci-lint run components/operator/

  unit-tests:
    executor: go-env
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: make -C components/operator test

  pre-integration:
    executor: docker-dind
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            sudo apt-get update
            sudo apt-get -y install curl bash make
            curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
            chmod +x kubectl
            sudo mv kubectl /usr/local/bin/
      - run:
          name: Install Docker
          command: |
            curl -sSL https://get.docker.com/ | sh
      - run:
          name: Start Docker daemon
          command: |
            sudo systemctl start docker
            sleep 10
            sudo docker run --rm --privileged --name k3d-dind -d docker:dind
            sleep 10
            sudo docker exec k3d-dind docker version
      - run:
          name: Install curl and bash in the container
          command: |
            sudo docker exec k3d-dind sh -c "apk update"
            sudo docker exec k3d-dind sh -c "apk add curl"
            sudo docker exec k3d-dind sh -c "apk add bash"
      - run:
          name: Install k3d and create cluster
          command: |
            sudo docker exec -it k3d-dind sh -c "curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v4.4.8 bash" &&
            sudo docker exec -it k3d-dind k3d cluster create k3dCluster --agents 1 --image "rancher/k3s:v1.29.3-k3s1" --port 80:80@loadbalancer --port 443:443@loadbalancer --wait
      - run:
          name: Run integration tests (pre)
          command: |
            make -C components/operator deploy
            make -C tests/operator test
          environment:
            IMG: europe-docker.pkg.dev/kyma-project/dev/serverless-operator:PR-963
#  post-integration:
#    executor: go-env
#    steps:
#      - checkout
#      - setup_remote_docker
#      - run:
#          name: Install k3d
#          command: |
#            curl -s https://raw.githubusercontent.com/rancher/k3d/main/install.sh | TAG=v4.4.8 bash
#      - run:
#          name: Install kubectl
#          command: |
#            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#            chmod +x kubectl
#            sudo mv kubectl /usr/local/bin/
#      - run:
#          name: Create k3d cluster
#          command: |
#            k3d cluster create k3dCluster --agents 1 --image rancher/k3s:v1.29.3-k3s1 --port 80:80@loadbalancer --port 443:443@loadbalancer
#      - run:
#          name: Waiting for node ready state
#          command: kubectl wait --for=condition=Ready node --all --timeout=60s
#      - run:
#          name: Run integration tests (pre)
#          command: |
#            make -C components/operator deploy
#            make -C tests/operator test
#          environment:
#            IMG: europe-docker.pkg.dev/kyma-project/prod/serverless-operator:ff0bbe7c9f0a14109758d7764c879ca89b9949c7